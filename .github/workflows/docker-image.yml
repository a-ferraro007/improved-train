name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    
env:
  IMAGE_NAME: "mta_goservice"
  REGISTRY: "registry.digitalocean.com/mta-times"
    

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        
      - name: Build the Docker image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
        
      - name: install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
        
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
         
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          known_hosts: ${{ secrets.HOST}}
      - name: Restart container
        run:  |
            ssh $(echo USERNAME):$(echo HOST)
            # cd into directory
            # cd ~/dev/mta
            
            # Stop Container 
            # docker compose down 
            
            # Remove old container
            # docker rm $(echo $IMAGE_NAME)
            
            # Restart container
            # docker compose up -d 
            

